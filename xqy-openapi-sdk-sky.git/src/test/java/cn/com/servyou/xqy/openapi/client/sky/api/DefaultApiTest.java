/**
 * 小企业财税开放平台API Gateway 后端服务RestApi标准文档说明
 * http://www.17dz.com
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package cn.com.servyou.xqy.openapi.client.sky.api;

import cn.com.servyou.xqy.openapi.client.sky.ApiClient;
import cn.com.servyou.xqy.openapi.client.sky.ApiException;
import cn.com.servyou.xqy.openapi.client.sky.model.ApiResponseobject;
import com.squareup.okhttp.OkHttpClient;
import com.squareup.okhttp.Request;
import com.squareup.okhttp.Response;
import org.junit.Test;

import java.io.IOException;

/**
 * API tests for DefaultApi
 */
public class DefaultApiTest {

    private final DefaultApi api                = new DefaultApi();

    /**
     *  每个 APP 都有这样一对密钥对，加密计算后放入请求中作为签名信息
     *  可以向17dz申请
     **/
    String appKey = "NURDNkVCMDY3MzJBNDM3RjlGNDFFRjM2NjNCMUE0RTY=";

    String appKeySecret = "q0b8h05wK2VX11nHw2f8rQ==";

    /** 思凯 测试网关地址 */
    private String           basePath           = "http://218.13.4.65:8084/gateway/sky";

    /** 代账机构纳税号 */
    private String           companyTaxPayerId  = "20170726004";

    /** 企业纳税号 */
    private String           customerTaxPayerId = "2222222222222222";

    /** 会计期 */
    private String           period             = "201706";

    /**
     * 返回资产负债表
     *
     * 根据公司的税号、客户税号以及会计期查询资产负债表
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssetsDebtSheetUsingGETTest() throws ApiException {
        ApiClient apiClient = api.getApiClient();
        apiClient.setAppKey(appKey);
        apiClient.setAppKeySecret(appKeySecret);
        apiClient.setBasePath(basePath);

        ApiResponseobject response = null;
        try {
            response = api.getAssetsDebtSheetUsingGET(companyTaxPayerId, customerTaxPayerId,
                period);
        } catch (ApiException e) {
            e.printStackTrace();
        }
        System.out.println(response.toString());

    }

    /**
     * 返回资产负债表
     *
     * 根据公司的税号、客户税号以及会计期查询资产负债表
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssetsDebtSheetUsingPOSTTest() throws ApiException {
        ApiClient apiClient = api.getApiClient();
        apiClient.setAppKey(appKey);
        apiClient.setAppKeySecret(appKeySecret);
        apiClient.setBasePath(basePath);

        ApiResponseobject response = api.getAssetsDebtSheetUsingPOST(companyTaxPayerId,
            customerTaxPayerId, period);
        System.out.println(response.toString());
        // TODO: test validations
    }

    /**
     * 返回利润表
     *
     * 根据公司的税号、客户税号以及会计期查询利润表
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIncomeSheetUsingGETTest() throws ApiException {
        ApiClient apiClient = api.getApiClient();
        apiClient.setAppKey(appKey);
        apiClient.setAppKeySecret(appKeySecret);
        apiClient.setBasePath(basePath);

        ApiResponseobject response = api.getIncomeSheetUsingGET(companyTaxPayerId,
            customerTaxPayerId, period);
        System.out.println(response.toString());
    }

    /**
     * 返回利润表
     *
     * 根据公司的税号、客户税号以及会计期查询利润表
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIncomeSheetUsingPOSTTest() throws ApiException {
        ApiClient apiClient = api.getApiClient();
        apiClient.setAppKey(appKey);
        apiClient.setAppKeySecret(appKeySecret);
        apiClient.setBasePath(basePath);

        ApiResponseobject response = api.getIncomeSheetUsingPOST(companyTaxPayerId,
            customerTaxPayerId, period);
        System.out.println(response.toString());

        // TODO: test validations
    }

    public static void main(String[] args) throws IOException {
        final OkHttpClient client = new OkHttpClient();

        Request request = new Request.Builder().url("https://open.17dz.com/")
            .header("User-Agent", "OkHttp Headers.java")
            .addHeader("Accept", "application/json; q=0.5")
            .addHeader("Accept", "application/vnd.github.v3+json").build();

        Response response = client.newCall(request).execute();
        if (!response.isSuccessful())
            throw new IOException("Unexpected code " + response);

        System.out.println("Server: " + response.header("Server"));
        System.out.println("Date: " + response.header("Date"));
        System.out.println("Vary: " + response.headers("Vary"));
    }

}
